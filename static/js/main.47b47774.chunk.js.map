{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47b47774.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n            case 'ADD_TRANSACTIONS':\r\n                return {\r\n                    ...state,\r\n                    transactions: [action.payload,...state.transactions]\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//reducer is a way to change your state and send it down to your component {application}","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer'\r\n\r\n//initial state \r\nconst initialState = {\r\n    transactions: []\r\n};\r\n\r\n//Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Actions\r\n\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTIONS',\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTIONS',\r\n            payload: transaction\r\n        })\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n          <h4>Your Balance</h4>\r\n          <h1 >${total}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p  className=\"money plus\">{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p  className=\"money minus\">{expense}</p>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext)\r\n\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n          {transaction.text} <span>{sign}${ Math.abs(transaction.amount)}</span><button \r\n          onClick={() => deleteTransaction(transaction.id)} \r\n          className=\"delete-btn\">x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, { useContext } from 'react';\r\nimport  Transaction  from './Transaction'\r\n\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n    return (\r\n        <>\r\n                <h3>History</h3>\r\n            <ul  className=\"list\">\r\n              {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n            </ul> \r\n        </>\r\n    )\r\n}\r\n \r\nexport default TransactionList\r\n","import React, {useState, useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nconst AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext)\r\n\r\n    const onSubmit = e => {\r\n      e.preventDefault();\r\n\r\n      const newTransaction = {\r\n        id: Math.floor(Math.random() *10000000),\r\n        text,\r\n        amount: +amount\r\n      }\r\n      addTransaction(newTransaction);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)}  placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)}  placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction\r\n","import React from 'react';\nimport  Header  from './components/Header';\nimport  Balance  from './components/Balance';\nimport  IncomeExpenses  from './components/IncomeExpenses';\nimport  TransactionList  from './components/TransactionList';\nimport  AddTransaction  from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState'\n\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <GlobalProvider >\n        <Header />\n        <div className=\"container\">\n            <Balance />\n            <IncomeExpenses />\n            <TransactionList />\n            <AddTransaction />\n        </div>  \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}